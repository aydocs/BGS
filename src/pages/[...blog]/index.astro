---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import merge from 'lodash.merge';
import type { ImageMetadata } from 'astro';
import Layout from '~/layouts/PageLayout.astro';
import SinglePost from '~/components/blog/SinglePost.astro';
import ToBlogLink from '~/components/blog/ToBlogLink.astro';

import { getCanonical, getPermalink } from '~/utils/permalinks';
import { getStaticPathsBlogPost, blogPostRobots } from '~/utils/blog';
import { findImage } from '~/utils/images';
import type { MetaData } from '~/types';
import RelatedPosts from '~/components/blog/RelatedPosts.astro';

export const prerender = true;

export const getStaticPaths = (async () => {
  // Tüm blog yazılarının statik yollarını getirir
  return await getStaticPathsBlogPost();
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { post } = Astro.props as Props;

// Yazının canonical URL'si oluşturuluyor
const url = getCanonical(getPermalink(post.permalink, 'post'));

// Yazının ana görseli bulunuyor (varsa)
const image = (await findImage(post.image)) as ImageMetadata | string | undefined;

// Meta veri nesnesi hazırlanıyor, OpenGraph bilgileri dahil
const metadata = merge(
  {
    title: post.title, // Yazı başlığı
    description: post.excerpt, // Yazı özeti
    robots: {
      index: blogPostRobots?.index, // Arama motoru indeksleme ayarı
      follow: blogPostRobots?.follow, // Bağlantıları takip etme ayarı
    },
    openGraph: {
      type: 'article',
      ...(image
        ? { images: [{ url: image, width: (image as ImageMetadata)?.width, height: (image as ImageMetadata)?.height }] }
        : {}),
    },
  },
  { ...(post?.metadata ? { ...post.metadata, canonical: post.metadata?.canonical || url } : {}) }
) as MetaData;
---

<Layout metadata={metadata}>
  {/* Yazı içeriği ve görseli */}
  <SinglePost post={{ ...post, image: image }} url={url}>
    {post.Content ? <post.Content /> : <Fragment set:html={post.content || ''} />}
  </SinglePost>
  {/* Blog ana sayfasına dönüş bağlantısı */}
  <ToBlogLink />
  {/* İlgili yazılar bileşeni */}
  <RelatedPosts post={post} />
</Layout>
